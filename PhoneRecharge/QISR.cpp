#include "StdAfx.h"
#include "QISR.h"


CQISR::CQISR(void)
{
}

CQISR::~CQISR(void)
{
}

/*******************************************************************
| 函数名称：语音识别初始化                                         |
| 函数功能：初始化语音识别对象                                     |
| 输入参数：无                                                     |
| 输出参数：无                                                     |
| 返回值：  无                                                     |
| 说明：无                                                         |
|******************************************************************/
void CQISR::SRInit()
{

}

/*******************************************************************
| 函数名称：语音识别                                               |
| 函数功能：对接收的语音文件，上传服务器进行语音识别，             |
|            并将识别的结果文本返回                                |
| 输入参数：wavfile语音识别pcm16位wave文件，SpeechText返回识别结果 |
| 输出参数：无                                                     |
| 返回值：  无                                                     |
| 说明：无                                                         |
|******************************************************************/
int CQISR::FileSpeechRecognition(char* wavfile,char* &SpeechText)
{

  return 0;
}

//memory recognition
int CQISR::MemorySpeechRecognition(char* wavBuffer, UINT uLen, char* &SpeechText)
{
  return 0;  
}

//Close interface
void CQISR::SRClose()
{

}

/*******************************************************************
| 函数名称：上传语法                                               |
| 函数功能：上传最新语法key，并获取语法ID，用于要识别的语音        |
| 输入参数：asr_keywords_utf8，语法文本用逗号分隔，utf8格式        |
| 输出参数：无                                                     |
| 返回值：  0成功，其他失败                                        |
| 说明：无                                                         |
|******************************************************************/
int  CQISR::SendSyntax(char * asr_keywords_utf8)
{
  return 0;
}

/*******************************************************************
| 函数名称：获得当前语法ID                                         |
| 函数功能：获得当前语法ID                                         |
| 输入参数：无                                                     |
| 输出参数：无                                                     |
| 返回值：  无                                                     |
| 说明：无                                                         |
|******************************************************************/
const char* CQISR::getExID(void)
{
  return 0;
}

/*******************************************************************
| 函数名称：设置语法ID                                             |
| 函数功能：从配置文件中获得语法ID，并设置语法ID公共变量           |
| 输入参数：exID数字和字母的长字符串                               |
| 输出参数：无                                                     |
| 返回值：  0成功，其他失败                                        |
| 说明：无                                                         |
|******************************************************************/
int CQISR::SetExID(char exID[128])
{
  return 0;
}

